/*
    key:F10
	功能：SR组菜单
	1. 在搜索结果窗口，显示主列表
		1.Idle,mmiidle_cstyle.c
		2.Set,mmiset_wintab.c
		3.lang,mmi_res_prj_def.h
		按1/2/3,跳转到对应文件(不考虑行)
	2. 其他文件，添加/显示已存在item
	3. 编辑列表文件, 按F7->E->3, 打开: \SI\node\Macro_Group_Menu.h

	功能：MK组菜单
	1#. 选中font  -- list -跳转
	2#. 中文 
	3#. 未选中，跳到对应组: tools/set

	
Fun list:
	macro _TempHeadF10(hbuf){}
Group()
	MakeGroup(hbuf)
	SrGroup(hbuf)
	DefaultGroup(hbuf)
	ShowGroupMenu(menulv)
	GetGroupFile(menulv, lvVal)
	GetGroupNote(curName)
OpenF10Test(hbuf, v)
	
*/

macro Group()
{
	//_TempHeadF10(hbuf)
	hwnd = GetCurrentWnd()
	hbuf = GetCurrentBuf()
	if (hwnd == 0)
	{
    	hbuf = OpenDefaultSR(hbuf)
    	stop
	}
	
	if(IsMakeFile(hbuf))
	{
		MakeGroup(hbuf)
	}
	else if(IsSRFile(hbuf))
	{
		SrGroup(hbuf)
	}
	else
	{
		DefaultGroup(hbuf)
	}
}

macro MakeGroup(hbuf)
{
	//_TempHeadF10(hbuf)
	SrGroup(hbuf)
	/*
	sel = MGetWndSel(hbuf)
	//未选择
	if (IsNoSelect(sel))
	{
	}
	else
	{
		cur_line = GetBufLine(hbuf, sel.lnFirst )
		cur_sel = strmid(cur_line, sel.ichFirst, sel.ichLim)
		
	}
	*/
}

macro SrGroup(hbuf)
{
	//_TempHeadF10(hbuf)
	count = ShowGroupMenu("")
	if(count>0)
	{
		key = GetKey()
		if (key >= 49 && key <= 48 + count)
		{
			file = GetGroupFile("", key - 48)
			OpenExistFile(file)
		}
	}
	else
	{
		msg("No Menu List")
	}
}

macro DefaultGroup(hbuf)
{
	//_TempHeadF10(hbuf)
	szpathName = GetBufName(hbuf)
	filename = GetFileName(szpathName)
	mNote = GetGroupNote(filename) // valid:1,2,3
	if(mNote == "")
	{
		grMsg = "Add Menu, File: @filename@" # CharFromKey(13)
		grMsg = grMsg # "Note: set、tool、menu" # CharFromKey(13)
		mNote = Ask("@grMsg@")
		grRule = OpenCache(getNodePath(0) # "\\Macro_Group_Menu.h")
		AppendBufLine(grRule, "menu:@mNote@,@filename@")
		SaveBuf(grRule)
		CloseBuf(grRule)
	}
	else
	{
		//如果备注同名，显示相关列表
		count = ShowGroupMenu(mNote)
		if(count>0)
		{
			key = GetKey()
			if (key >= 49 && key <= 48 + count)
			{
				file = GetGroupFile(mNote, key - 48)
				OpenExistFile(file)
			}
		}
		else
		{
			msg("Cur Item: @mNote@  @filename@")
		}
	}
}

//菜单级数对应的所有名称+文件名
macro ShowGroupMenu(mNote)
{
	//_TempHeadF10(hbuf)
	hprj = GetCurrentProj ()
	path = GetProjDir (hprj)
	type = getBaseType(path)
	if(type == 10 || type == 20 || type == 30)
	{
		mFile = getNodePath(0) # "\\Macro_Group_Menu.h"
	}
	else
	{
		mFile = getNodePath(0) # "\\Macro_Group_Menu.h" //6533,no use
	}
	
	if(mNote == "")
	{
		mKey = "menu:"
	}
	else
	{
		mKey = "menu:" # mNote # ","
	}
	mBuf = OpenCache(mFile)
	mSel = SearchInBuf(mBuf, mKey, 0, 0, FALSE, FALSE, FALSE)
	menuMsg = ""
	index = 0

	while (mSel != "")
	{
		index = index + 1
		line = GetBufLine(mBuf, mSel.lnFirst )
		ilen = strlen(line)
		
		ichFile = SplitMacro(line, ",", 0, ilen)
		iFile   = strmid(line, ichFile+1, ilen)
		menuMsg = menuMsg # "@index@. @iFile@" # CharFromKey(13)
		
		mSel = SearchInBuf(mBuf, mKey, mSel.lnLast+1, 0, 0, 0, 0)
	}
	CloseBuf(mBuf)
	if(index > 0)
	{
		msg(menuMsg)
	}
	return index
}

//菜单级数对应的所有名称+文件名
macro GetGroupFile(mNote, mIndex)
{
	//_TempHeadF10(hbuf)
	hprj = GetCurrentProj ()
	path = GetProjDir (hprj)
	type = getBaseType(path)
	if(type == 10 || type == 20 || type == 30)
	{
		mFile = getNodePath(0) # "\\Macro_Group_Menu.h"
	}
	else
	{
		mFile = getNodePath(0) # "\\Macro_Group_Menu.h" //6533,no use
	}
	
	if(mNote == "")
	{
		mKey = "menu:"
	}
	else
	{
		mKey = "menu:" # mNote # ","
	}
	mBuf = OpenCache(mFile)
	mSel = SearchInBuf(mBuf, mKey, 0, 0, FALSE, FALSE, FALSE)
	index = 1
	iFile = ""

	while (mSel != "")
	{
		if(index == mIndex)
		{
			line = GetBufLine(mBuf, mSel.lnFirst )
			ilen = strlen(line)
			
			ichFile = SplitMacro(line, ",", 0, ilen)
			iFile   = strmid(line, ichFile+1, ilen)
			break
		}
		
		mSel = SearchInBuf(mBuf, mKey, mSel.lnLast+1, 0, 0, 0, 0)
		index = index + 1
	}
	CloseBuf(mBuf)
	return iFile
}

//文件名对应的备注
macro GetGroupNote(curName)
{
	//_TempHeadF10(hbuf)
	hprj = GetCurrentProj ()
	path = GetProjDir (hprj)
	type = getBaseType(path)
	if(type == 10 || type == 20 || type == 30)
	{
		mFile = getNodePath(0) # "\\Macro_Group_Menu.h"
	}
	else
	{
		mFile = getNodePath(0) # "\\Macro_Group_Menu.h" //6533,no use
	}
	
	mBuf = OpenCache(mFile)
	mSel = SearchInBuf(mBuf, curName, 0, 0, FALSE, FALSE, FALSE)
	//menu:calc,mmicalc_main.c
	mNote = ""
	if (mSel != "")
	{
		//menu2:tool-a1,sbd_f3.em
		line = GetBufLine(mBuf, mSel.lnFirst )
		ilen = strlen(line)
		
		ichLv1 = SplitMacro(line, ":", 0, ilen)		
		//iLv   = strmid(line, 0, ichLv1) //"menu"
		
		ichLv2 = SplitMacro(line, ",", 0, ilen)
		mNote    = strmid(line, ichLv1 + 1, ichLv2) //"calc"
	}
	CloseBuf(mBuf)
	return mNote
}

macro OpenF10Test(hbuf, v)
{
	//_TempHeadF10(hbuf)
	//Tree()
	if(v == ")") //from F1, no param, param is ")"
	{
		v = "F101"
	}
	else if(v == "F10") //from F10
	{
		v = "F102"
	}
	
	if(v == "F101")
	{
		lv = "menu1"
		ShowGroupMenu(lv)
		lv = "menu2:tool"
		ShowGroupMenu(lv)
		lv = "menu2:set"
		ShowGroupMenu(lv)
	}
	else if(v == "F102")
	{
		//DefaultGroup(hbuf)
		SrGroup(hbuf)
		MakeGroup(hbuf)
	}
	else if(v == "F104")
	{
		iFile = GetGroupFile("menu3:tool-a2", 1)
		msg(iFile)
		iFile = GetGroupFile("menu3:tool-a2", 2)
		msg(iFile)
	}

}


