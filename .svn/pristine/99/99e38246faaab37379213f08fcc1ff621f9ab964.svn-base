
/*
    base:
       工具       跳        记显 
       层叠       打开       搜
       树        规        元组  
    
       F7       F5        F11F12
       F1       F2        F9
       --       F6        F10
       
	功能说明：
	1. 需要更改路径为对应工程目录/文件名；
	2. 所有公共目录/文件名都在这个文件中修改；
       
    功能进行中:
       CTRL: 1
       F1: 4
       F7: 3
       F8: 1
       
*/

macro getProjectFromList(n)
{
	// 6531DA 项目路径
	if (n == 10)	{	return "E:\\SVN\\6531DA_new" 	} //第1项不能为空
	//if (n == 12)	{	return "F:\\SBD_6531_12C_DA_FCC" 	}
	
	// 6531btdialer 项目路径
	if (n == 20)	{	return "F:\\6531DA_Btdialer" 	} //第1项不能为空
	
	// 6531E 项目路径
	if (n == 30)	{	return "F:\\6531E_16A" 	}
	if (n == 32)	{	return "E:\\SVN\6531E_16A_old" 	}

	// soft 项目路径
	if (n == 40)	{	return "F:\\soft" 	}
	
	// 6533 项目路径
	if (n == 50)	{	return "F:\\SC6533G\\soft" 	} //其他不要设置奇数项
	if (n == 51)	{	return "E:\\SC6533G" 	} //解决源码+SI目录分开问题, SR dir 不在soft中
	
	// 7701 项目路径
	if (n == 60)	{	return "D:\\SVN\\SC7701" 	}

	// MTK 项目路径1
	if (n == 70)	{	return "F:\\11CW1352MP\\11CW1352MP" 	} //其他不要设置奇数项
	if (n == 71)	{	return "F:\\11CW1352MP\\SI4.0" 	} 	//解决源码+SI目录分开问题, 源码目录单独设置在前一项
	
	// base -> save
	if (n == 80)	{	return "E:\\save" 	}
	
	//
	return ""
}

//用固定目录，SI_base中不用添加这些文件了，只用添加.em的目录
macro getSavePath(0)		{	return "E:\\save"					}	//按F1->Q打开目录
macro getCmdPath(0)			{	return "E:\\save\\SI\\Cmd"			}	//ShellExecute目录
macro getTXTPath(0)			{	return "E:\\save\\SI\\Cmd_TXT"		}	//ShellExecute目录
macro getNodePath(0)		{	return "E:\\save\\SI\\node"			}	
macro getDesktopPath(0)		{	return "E:\\desktop"				}	//桌面，创建桌面link
//Cmd
macro getBComparePath(0)	{	return "\"C:\\Program Files\\Beyond Compare 4\\BCompare.exe\""			}
//macro getBComparePath(0)	{	return "\"C:\\Program Files (x86)\\Beyond Compare 3\\BCompare.exe\""			}

//file name
macro getAllMacroFile(n)
{
	if(n == 10)
	{
		return "00_Macro_DA_2018.h"
	}
	else if(n == 20)
	{
		return "00_Macro_B_2018.h"
	}
	else if(n == 30)
	{
		return "00_Macro_E_2018.h"
	}
	else
	{
		return ""
	}
}


macro forProjectPath(basePath)
{
	var err
	var n
	var path
	
	n = 10
	err = 0
	while (1)
	{
		path = getProjectFromList(n) //遍历路径列表
		
		if("" == path){
			if(0 == n-n/10*10 || 100 == n){
				return err
			}else{
				n = (1 + n/10)*10	//加10
				continue
			}
		}else{
			if(basePath == path){
				return n
			}else{
				n = n + 1
				continue
			}
		}
	}
}

//目录操作
macro getCurPath(pathName)
{
	//获取 当前目录, 不包括文件名
	return getBaseDir(pathName, 0)	//getCurPath
}
macro getBasePath(pathName)
{
	//获取目录 6531E:
	return getBaseDir(pathName, 11)	//getBasePath
}
macro getProjectPath(pathName)
{
	//获取目录 6531E/project, 不考虑 C:
	//待改成getBaseProjectEx+"/project"
	return getBaseDir(pathName, 1)	//getProjectPath
}
macro getCurProject(pathName)
{
	//获取目录 6531E/project/SE039_XX, 考虑设置值:
	project = getProjectPath(pathName)
	ret = CompareEx(pathName, project, 1)//路径 包含"6531E/project"
	if(ret ==0)
	{
		//project后面的第一个DirName
		index = SplitMacro(pathName, "\\", strlen(project)+1, strlen(pathName))
		return strmid(pathName, 0, index)
	}
	else
	{
		//F1->9保存的DirName
		projectName = ReadMode(getMakeRow(0))
		if(projectName != null)
		{
			return project # "\\" # projectName
		}
	}
	return ""
}
macro getCurProjectName(pathName)
{
	//获取目录 SE039_.._F2:
	project = getProjectPath(pathName)
	ret = CompareEx(pathName, project, 1)//left 包含 right(包含6531E/project)
	if(ret ==0)
	{
		//project后面的第一个DirName
		index = SplitMacro(pathName, "\\", strlen(project)+1, strlen(pathName))
		return strmid(pathName, strlen(project)+1, index)
	}
	else
	{
		//F1->9保存的DirName
		projectName = ReadMode(getMakeRow(0))
		if(projectName != null)
		{
			return projectName
		}
	}
	return ""
}
macro getBaseType(pathName)
{
	// n == 10: 6531DA
	// n == 20: 6531btdialer
	// n == 30: 6531E
	// n == 40: soft
	// n == 50: 6533
	return getBaseDir(pathName, 3)	//getBaseType
}

//common
macro getBaseDir(pathName, type)
{
	//msg ("getBaseDir.@pathName@.@type@")

	nlength = strlen(pathName)
	var name
	var i
	var n
	var start
	var err
	
	i = 0		//文件名长度
	start = 0	//路径总长度
	while (1)
	{
		i = start
		name = ""
		while ( i < nlength)
		{
			ch = pathName[i]
			if ("\\" == "@ch@")
				break
			i = i + 1
		}
		if(type == 0 || start == 0){
			if(nlength == i){	//文件在根目录下时，未找到"\\"
				i = start - 1
				break
			}
			start = i + 1
		}else if(i - start > 0){
			name = strmid(pathName, start, i)
			
			n = forProjectPath(strmid(pathName, 0, i))
			if(n == 0)
			{
				err = start - 1
				start = i + 1
				continue
			}
			else if(n-n/2*2==1) //单数为只是SI目录, 前一项为真实目录(目录分开)
			{
				n = n - 1
			}
			
			n0 = n/10*10
			
			// n == 10: 6531DA
			// n == 20: 6531btdialer
			// n == 30: 6531E
			// n == 40: soft
			// n == 50: 6533
			
			if(type==1)
			{
				//msg ("getBaseDir.@pathName@.i~@i@.n~@n@")
				if(n0==10 || n0==20 || n0==30){
					return getProjectFromList(n) # "\\project"
				}else if(n0==40 || n0==50){
					return getProjectFromList(n) # "\\target"
				}else if(n0==70){
					return getProjectFromList(n) # "\\make"
				}else{
					return getProjectFromList(n)
				}
			}
			else if(type==11)
			{
				return getProjectFromList(n)
			}
			else if(type==3)
			{
				return n
			}
		}else{
			i = err
			break
		}
	}
	if(type==3){
		return 0
	}else if(0==start)//默认位置
	{
		//return cat("F:\\SBD_6531_12C_DA", "\\project")
		return cat(getProjectFromList(10), "\\project")
	}
	else
	{
		return cat(strmid(pathName, 0, i), "")
	}
}

