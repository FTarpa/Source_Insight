/*	key:F5	功能：	1. 选中宏，mk文件中,          打开/跳转到对应的文件/宏	      打开文件，再跳转到宏	          ST7735S   -> tft_ST7735S.c   -> LCD_ST7735S_YIHUA_HSD	          GC6133   -> sensor_GC6133.c  -> SBD_CAMREA_GC6133_FOR_XX	          GC6133   -> sensor_GC6133.c  -> SBD_CAMREA_GC6133_FOR_XX	          BT   -> bt_cfg.h  -> SBD_BT_NAME_XX	      打开目录	          CUSTOMER   -> F:\6531E_16A\common\nv_parameters	2. 选中宏，非mk文件中, 查找下一个	3. 复制中文-语言, 并且未选中内容，跳转到复制对应的宏	      阿       -> ARABIC	      西班牙     -> SPANISH   //复制前面1~3个中文都可以	      法语      -> FRENCH	4#. 优化，LCD关键词加等级，先计算等级，再跳转（要等做了F6再说，才有用）		Fun list:	macro _TempHeadF5(hbuf){}Goto()	GotoKey(word)		GotoFile(word)	GotoHan(word)		GotoNextMacro(word)OpenF5Test(hbuf)*/macro Goto(){	//_TempHeadF5(hbuf)	hbuf = GetCurrentBuf()		//日志功能	if(IsFileName(hbuf, "Macro_Note_")||IsFileName(hbuf, "Simple_CTRL_"))	{		NoteHander(hbuf, 5)		stop	}			//F7开关：切换F5、F6功能	ret = SwtichTools("F5")//switch mode -> other work	if(ret == 0)		stop	sel = MGetWndSel(hbuf)	//未选择	if (IsNoSelect(sel))	{		if(IsMakeFile(hbuf))		{			//跳转到复制对应的语言/宏			cur_line = GetClipString(hbuf)			if(strlen(cur_line) > 0)			{				GotoHan(cur_line)			}			else			{				msg = "跳转: " # CharFromKey(13)				msg = msg # "1.跳转到复制对应的语言/宏"            # CharFromKey(13)				msg = msg # "2.跳转到选中的宏"        # CharFromKey(13)				msg (msg)			}		}		else		{		}	}	else	{		cur_line = GetBufLine(hbuf, sel.lnFirst )		if(strlen(cur_line) < sel.ichLim)			sel.ichLim = sel.ichLim - 1		if(sel.ichFirst == sel.ichLim || 4095 == sel.ichLim)			stop		cur_sel = strmid(cur_line, sel.ichFirst, sel.ichLim)				if(IsMakeFile(hbuf)||IsSRFile(hbuf))		{			//选中宏，mk文件中,          打开/跳转到对应的文件/宏			GotoKey(hbuf, cur_sel)		}		else if(IsFileName(hbuf, "MMI_features_switch"))		{			//跳转到文件或路径,再跳转到word/mcr			GotoFile("file", "MMI_features.h", "", cur_sel)		}		else		{			//选中宏，非mk文件中, 查找下一个			SearchForward()			//GotoNextMacro(cur_sel, sel.lnFirst, sel.ichFirst+1)		}	}}//find key, even rowmacro GotoKey(hbuf, word){	//_TempHeadF5(hbuf)		// bft == 10: 6531DA	// bft == 20: 6531btdialer	// bft == 30: 6531E	// bft == 40: soft	// bft == 50: 6533	szpathName = GetBufName(hbuf)	bft = getBaseFileType(szpathName, 4)	if(bft == "")		stop	hbufRule = OpenCache(getNodePath(0) # "\\Macro_Rule_Key_file_@bft@.h")	len = strlen (word)	left = 0	right = 0	while (1)	{		right = SplitMacro(word, "_", left, len)		if (right == -1)		{			mcr = strmid(word, left, len);		}		else if (right >= left)		{			mcr = strmid(word, left, right);		}		else		{			break		}				row = FindCacheWholeFile(hbufRule, "key:" # mcr # ",")		if(row >= 0)		{			//NV3209G,file:tft_NV3209G.c			cur_line = GetBufLine(hbufRule, row )			cur_len = strlen (cur_line)			lnStr = GetLineMacro(cur_line)	//获取宏，不包括删除注释			index2 = SplitMacro(cur_line, ",", 0, cur_len)			index3 = SplitMacro(cur_line, ":", index2, cur_len)						cmdType = strmid(cur_line, index2+1, index3);			fileName = strmid(cur_line, index3+1, cur_len);						GotoFile(cmdType, fileName, mcr, word)			break		}		else		{			if (right == -1)			{				break			}			left = right + 1			continue		}	}		CloseBuf(hbufRule)}//find Han, even row//不同电脑可能有差异，在Macro_Rule_Han.h中用F6排序(多按2次不影响)macro GotoHan(word){	//_TempHeadF5(hbuf)	hbufRule = OpenCache(getNodePath(0) # "\\Macro_Rule_Han_file.h")	lnMax = GetBufLineCount(hbufRule)	//查找Rule	row = FindCacheWholeFile(hbufRule, "key:" # word)	if(row >= 0)	{		cur_line = GetBufLine(hbufRule, row )				index = NextWS( cur_line, 0)		len = strlen(cur_line)		mar = strmid(cur_line, index+1, len)		//msg ("mar:  ~ @mar@" )			GotoNextMacro(mar, 0, 0)	}	else	{		msg ("@word@ not found" )	}}//跳转到文件或路径,再跳转到word/mcrmacro GotoFile(type, fileName, mcr, word){	//_TempHeadF5(hbuf)	//msg ("GotoFile:  ~ @type@ ~ @fileName@ ~ @mcr@ ~ @word@" )	if ("file" == "@type@")	{		hbuf = OpenExistFile(fileName)		if (hbuf != hNil){			ret = GotoNextMacroEx(hbuf, word, 0, 0)			//no found			if(ret == 0 && mcr != "")			{				ret = GotoNextMacroEx(hbuf, mcr, 0, 0)			}		}		else		{			msg ("@fileName@ no found!" )		}	}	else if ("path" == "@type@")	{		hbuf = GetCurrentBuf()		basePro = getBasePath(hbuf)		curPath = cat(basePro, "\\@fileName@")		ret = ShellExecute("explore", "@curPath@", "", "", 1)		//msg ("Goto:  ~ @curPath@" )	}	else if ("path2" == "@type@")	{		//open specific path		//...\common\nv_parameters\SE039_MB\SE039_ANSD_2IN1		hbuf = GetCurrentBuf()		product_cfg = getMacroValue(hbuf, "PRODUCT_CONFIG", 1) //"SE039_MB"		sel = MGetWndSel(hbuf)		cur_line = GetBufLine(hbuf, sel.lnFirst )		val = GetLineValue(cur_line)				//hbuf = GetCurrentBuf()		basePro = getBasePath(hbuf)		curPath = cat(basePro, "\\@fileName@\\@product_cfg@\\@val@")		ret = ShellExecute("explore", "@curPath@", "", "", 1)		//msg ("Goto:  ~ @curPath@" )	}	}//跳转到当前文件宏位置macro GotoNextMacro(word, lnStart, ichStart){	//_TempHeadF5(hbuf)    hbuf = GetCurrentBuf()    return GotoNextMacroEx(hbuf, word, lnStart, ichStart)}//err return 0; found return 1macro GotoNextMacroEx(hbuf, word, lnStart, ichStart){    hwnd = GetCurrentWnd()    	//SearchInBuf (hbuf, pattern, lnStart, ichStart, fMatchCase, fRegExp, fWholeWordsOnly)	sel = SearchInBuf(hbuf, word, lnStart, ichStart, 0, 0, 0)	if (sel != "")	{		ScrollWndToLine(hwnd, sel.lnFirst)		SetWndSel(hwnd, sel)		return 1	}	else if(lnStart != 0 || ichStart != 0)	{		LoadSearchPattern(SearchFor, 0, 0, 0)		sel = SearchInBuf(hbuf, word, 0, 0, 0, 0, 0)		if (sel != "")		{			ScrollWndToLine(hwnd, sel.lnFirst)			SetWndSel(hwnd, sel)			return 1		}		else		{			return 0		}	}	else	{		//msg ("\"@word@\" no found" )		return 0	}}macro OpenF5Test(hbuf, v){	//_TempHeadF5(hbuf)	//Tree()	if(v == ")") //from F1, no param, param is ")"	{		v = "F52"	}	else if(v == "F5") //from F5	{		v = "F53"	}		if(v == "F50")	{		//批量测试中文排序的准确性		hbufRule = OpenCache(getNodePath(0) # "\\Macro_Rule_Han.h")		lnMax = GetBufLineCount(hbufRule)				TestFindCacheAll(hbufRule, 0, lnMax)	}	else if(v == "F51")	{		//batch test		hbufRule = OpenCache(getNodePath(0) # "\\Macro_Rule_Key.h")		lnMax = GetBufLineCount(hbufRule)				TestFindCacheAll(hbufRule, 0, 3)	}	else if(v == "F52")	{		//simple test		hbufRule = OpenCache(getNodePath(0) # "\\Macro_Rule_Key.h")		lnMax = GetBufLineCount(hbufRule)				TestFindCache(hbufRule, "TEST", lnMax) // 找不到		TestFindCache(hbufRule, "CHIP", lnMax) // 找不到		TestFindCache(hbufRule, "NV3029G", lnMax)		TestFindCache(hbufRule, "NV3029H", lnMax)	}	else if(v == "F53")	{		//simple test		hbufRule = OpenCache(getNodePath(0) # "\\Macro_Rule_Han_file.h")		lnMax = GetBufLineCount(hbufRule)				TestFindCache(hbufRule, "越", lnMax)		TestFindCache(hbufRule, "越南", lnMax)		TestFindCache(hbufRule, "阿", lnMax) // 找不到		TestFindCache(hbufRule, "匈牙", lnMax)		TestFindCache(hbufRule, "俄", lnMax)		TestFindCache(hbufRule, "乌", lnMax)		TestFindCache(hbufRule, "法", lnMax)		TestFindCache(hbufRule, "泰", lnMax) // 错	}	else if(v == "F54")	{		word = "CUSTOMER"		//word = "LCD_CHIP_GC9108"		GotoKey(hbuf, word)	}	else if(v == "F55")	{		hbufRule = OpenCache(getNodePath(0) # "\\Macro_Rule_Key.h")		lnMax = GetBufLineCount(hbufRule)		isTest = 0		word = "CUSTOMER"		row = FindCacheExt(hbufRule, word, lnMax, isTest)//row:61-66 -> 60		msg ("Find:  ~ @word@  @row@  " )				word = "GC6133_SUB"		row = FindCacheExt(hbufRule, word, lnMax, isTest)//row:61-66 -> 123		msg ("Find:  ~ @word@  @row@  " )				word = "CUSTOMER"		row = FindCacheExt(hbufRule, word, lnMax, isTest)//row:61-66 -> 123		msg ("Find:  ~ @word@  @row@  " )				GotoKey(word)		msg ("Find:  ~ " )	}}macro TestFindCache(hbufRule, word, lnMax){	row = FindCacheWholeFile(hbufRule, "key:" # word) // (hbufRule, "key:" # word # ",")	if(row>=0){		cur_line = GetBufLine(hbufRule, row )		msg ("Find:  ~ @word@  ~ @cur_line@  " )	}	else	{		msg ("no find:  ~ @word@  ~ @row@  " )	}}macro TestFindCacheAll(chkBuf, low, high){ 	var i 	var ret	i = low	lnMax = high	word = ""  	while(i < high) 	{		word = GetBufLine(chkBuf, i)				word = GetLineMacro(word)		//获取宏，不包括删除注释		//if(isHan == 1){		//	word = strmid(word,0,3)		//中文是3个字节		//}		row = FindCache(chkBuf, word, lnMax)	//查找Rule		if(row>=0){			cur_line = GetBufLine(chkBuf, row)			if(row==i){				PutBufLine(chkBuf, i, GetBufLine(chkBuf, i) # ",---")			}else{				PutBufLine(chkBuf, i, GetBufLine(chkBuf, i) # ",+++")			}			msg ("Find+:  ~ @word@  ~ @cur_line@  " )		}else{			msg ("Find-:  ~ @word@  no found " )		}        i = i + 1	}	SaveBuf(chkBuf)}